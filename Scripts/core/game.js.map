{"version":3,"sources":["core/game.ts"],"names":[],"mappings":"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","file":"core/game.js","sourcesContent":["/// <reference path=\"_reference.ts\"/>\n\n// MAIN GAME FILE\n\n// THREEJS Aliases\nimport Scene = THREE.Scene;\nimport Renderer = THREE.WebGLRenderer;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport BoxGeometry = THREE.BoxGeometry;\nimport CubeGeometry = THREE.CubeGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport SphereGeometry = THREE.SphereGeometry;\nimport Geometry = THREE.Geometry;\nimport AxisHelper = THREE.AxisHelper;\nimport LambertMaterial = THREE.MeshLambertMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Material = THREE.Material;\nimport Mesh = THREE.Mesh;\nimport Object3D = THREE.Object3D;\nimport SpotLight = THREE.SpotLight;\nimport PointLight = THREE.PointLight;\nimport AmbientLight = THREE.AmbientLight;\nimport Control = objects.Control;\nimport GUI = dat.GUI;\nimport Color = THREE.Color;\nimport Vector3 = THREE.Vector3;\nimport Face3 = THREE.Face3;\nimport Point = objects.Point;\nimport CScreen = config.Screen;\nimport Clock = THREE.Clock;\nimport FirstPersonControls = THREE.FirstPersonControls;\n\n//Custom Game Objects\nimport gameObject = objects.gameObject;\n\n// setup an IIFE structure (Immediately Invoked Function Expression)\nvar game = (() => {\n\n    var scene: Scene = new Scene();\n    var renderer: Renderer;\n    var camera: PerspectiveCamera;\n    var axes: AxisHelper;\n    var plane: Mesh;\n    var sphere: Mesh;\n    var sphereGeometry: SphereGeometry;\n    var sphereMaterial: LambertMaterial;\n    var ambientLight: AmbientLight;\n    var spotLight: SpotLight;\n    var control: Control;\n    var gui: GUI;\n    var stats: Stats;\n    var step: number = 0;\n    var clock: Clock;\n    var firstPersonControls\n\n    function init() {\n        // Instantiate a new Scene object\n        //scene = new Scene();\n\n        // setup a THREE.JS Clock object\n        clock = new Clock();\n\n        setupRenderer(); // setup the default renderer\n\t\n        setupCamera(); // setup the camera\n\n        //Add a Plane to the Scene\n        plane = new gameObject(\n            new PlaneGeometry(20, 20, 1, 1),\n            new LambertMaterial({ color: 0xf4a460 }),\n            0, 0, 0);\n        plane.rotation.x = -0.5 * Math.PI;\n        plane.name = \"ground\";\n        scene.add(plane);\n        console.log(\"Added Plane Primitive to scene...\");\n    \n        // Add a Sphere to the Scene\n        sphereGeometry = new SphereGeometry(2.5, 32, 32);\n        sphereMaterial = new LambertMaterial({ color: 0xff0000 });\n        sphere = new gameObject(sphereGeometry, sphereMaterial, 0, 2.5, 0);\n        sphere.name = \"The Red Planet\";\n        scene.add(sphere);\n        console.log(\"Added Sphere Primitive to the scene\");\n    \n        // setup first person controls\n        firstPersonControls = new FirstPersonControls(sphere);\n        firstPersonControls.lookSpeed = 0.4;\n        firstPersonControls.movementSpeed = 10;\n        firstPersonControls.lookVertical = true;\n        firstPersonControls.constrainVertical = true;\n        firstPersonControls.verticalMin = 0;\n        firstPersonControls.verticalMax = 2.0;\n        firstPersonControls.lon = -150;\n        firstPersonControls.lat = 120;\n    \n    \n        // add an axis helper to the scene\n        axes = new AxisHelper(20);\n        sphere.add(axes);\n        console.log(\"Added Axis Helper to scene...\");\n    \n        // Add an AmbientLight to the scene\n        //ambientLight = new AmbientLight(0x090909);\n        //scene.add(ambientLight);\n        //console.log(\"Added an Ambient Light to Scene\");\n\t\n        // Add a SpotLight to the scene\n        spotLight = new SpotLight(0xffffff);\n        spotLight.position.set(5.6, 23.1, 5.4);\n        spotLight.rotation.set(-0.8, 42.7, 19.5);\n        spotLight.intensity = 2;\n        spotLight.angle = 60 * (Math.PI / 180);\n        spotLight.distance = 200;\n        spotLight.castShadow = true;\n        spotLight.shadowCameraNear = 1;\n        spotLight.shadowMapHeight = 2048;\n        spotLight.shadowMapWidth = 2048;\n        scene.add(spotLight);\n        console.log(\"Added a SpotLight Light to Scene\");\n    \n        // add controls\n        gui = new GUI();\n        control = new Control(0.05);\n        addControl(control);\n\n        // Add framerate stats\n        addStatsObject();\n        console.log(\"Added Stats to scene...\");\n\n        document.body.appendChild(renderer.domElement);\n        gameLoop(); // render the scene\t\n\n    }\n\n    function addControl(controlObject: Control): void {\n        gui.add(controlObject, 'rotationSpeed', -0.5, 0.5);\n    }\n\n    function addStatsObject() {\n        stats = new Stats();\n        stats.setMode(0);\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.top = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n\n    // Setup main game loop\n    function gameLoop(): void {\n        stats.update();\n        var delta: number = clock.getDelta();\n\n        sphere.rotation.y += control.rotationSpeed;\n\n        firstPersonControls.update(delta);\n    \n        // render using requestAnimationFrame\n        requestAnimationFrame(gameLoop);\n\t\n        // render the scene\n        renderer.render(scene, camera);\n    }\n\n    // Setup default renderer\n    function setupRenderer(): void {\n        renderer = new Renderer();\n        renderer.setClearColor(0xEEEEEE, 1.0);\n        renderer.setSize(CScreen.WIDTH, CScreen.HEIGHT);\n        //renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = true;\n        console.log(\"Finished setting up Renderer...\");\n    }\n\n    // Setup main camera for the scene\n    function setupCamera(): void {\n        camera = new PerspectiveCamera(45, config.Screen.RATIO, 0.1, 1000);\n        //camera = new PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.x = 0.6;\n        camera.position.y = 16;\n        camera.position.z = -20.5;\n        camera.lookAt(new Vector3(0, 0, 0));\n        console.log(\"Finished setting up Camera...\");\n    }\n\n    window.onload = init;\n\n    return {\n        scene: scene\n    }\n\n})();\n\n"],"sourceRoot":"/source/"}